Entered Simulator.createNode()
Entered Simulator.createNode()
Entered Simulator.createNode()
Entered Simulator.createNode()
Entered Simulator.createLink()
Entered Simulator.createLink()
Entered Simulator.createLink()
Entered Simulator.createLink()
Entered Simulator.generateFlow()
Entered TCP.start()
Entered TCP.createSYN()
Entered EventList.generateEvent()
Entered Simulator.run()
******************************************
********** Initialization done. **********
******************************************
-----------------------------------------------
---------- Simulator::Main Loop (#0) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
+++++++++++++++++++
+     Flow: f1    +
+     Type: SYN   +
+     Node: h0    +
+     Time: 0.0   +
+++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Controller.newFlow()
Entered Dijkstra.run()
Entered Dijkstra.generateResult()
Entered Dijkstra.generateResult()
Entered Node.UpdateFlowTable()
Entered Node.UpdateFlowTable()
Entered Node.UpdateFlowTable()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#1) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
+++++++++++++++++++++++++++++++++
+     Flow: f1                  +
+     Type: SYN                 +
+     Node: s0                  +
+     Time: 7.333333333333334   +
+++++++++++++++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#2) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++++++++++++++++
+     Flow: f1                   +
+     Type: SYN                  +
+     Node: s1                   +
+     Time: 12.666666666666668   +
++++++++++++++++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#3) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++
+     Flow: f1     +
+     Type: SYN    +
+     Node: h1     +
+     Time: 18.0   +
++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
****************************************
*     Packet #0 delivered to node h1   *
****************************************
Entered TCP.recv()
Entered TCP.createACK()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#4) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++
+     Flow: f1     +
+     Type: ACK    +
+     Node: h1     +
+     Time: 18.0   +
++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Controller.newFlow()
Entered Dijkstra.run()
Entered Dijkstra.generateResult()
Entered Dijkstra.generateResult()
Entered Node.UpdateFlowTable()
Entered Node.UpdateFlowTable()
Entered Node.UpdateFlowTable()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#5) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++++++++++++++++
+     Flow: f1                   +
+     Type: ACK                  +
+     Node: s1                   +
+     Time: 25.333333333333332   +
++++++++++++++++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#6) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++++++++++++++++
+     Flow: f1                   +
+     Type: ACK                  +
+     Node: s0                   +
+     Time: 30.666666666666664   +
++++++++++++++++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
Entered Node.hasFlowEntry()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered Node.getEgressLink()
Entered EventList.generateEvent()
-----------------------------------------------
---------- Simulator::Main Loop (#7) ----------
-----------------------------------------------
Entered EventList.getEvent()
Entered Event.execute()
++++++++++++++++++++
+     Flow: f1     +
+     Type: ACK    +
+     Node: h0     +
+     Time: 36.0   +
++++++++++++++++++++
========== Event.execute(): Arrival ==========
Entered Packet.hasArrived()
****************************************
*     Packet #0 delivered to node h0   *
****************************************
Entered TCP.recv()
Entered TCP.send()
-----------------------------------------------
---------- Simulator::Main Loop (#8) ----------
-----------------------------------------------
Entered EventList.getEvent()
